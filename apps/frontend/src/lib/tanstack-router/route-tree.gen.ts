// biome-ignore lint: this file is auto-generated by TanStack Router

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as AppImport } from './../../routes/_app'
import { Route as IndexImport } from './../../routes/index'
import { Route as AppUploadIndexImport } from './../../routes/_app/upload/index'
import { Route as AppRecipeIndexImport } from './../../routes/_app/recipe/index'
import { Route as AppRecipeRecipeIdIndexImport } from './../../routes/_app/recipe/$recipeId/index'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppUploadIndexRoute = AppUploadIndexImport.update({
  id: '/upload/',
  path: '/upload/',
  getParentRoute: () => AppRoute,
} as any)

const AppRecipeIndexRoute = AppRecipeIndexImport.update({
  id: '/recipe/',
  path: '/recipe/',
  getParentRoute: () => AppRoute,
} as any)

const AppRecipeRecipeIdIndexRoute = AppRecipeRecipeIdIndexImport.update({
  id: '/recipe/$recipeId/',
  path: '/recipe/$recipeId/',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/recipe/': {
      id: '/_app/recipe/'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof AppRecipeIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/upload/': {
      id: '/_app/upload/'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof AppUploadIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/recipe/$recipeId/': {
      id: '/_app/recipe/$recipeId/'
      path: '/recipe/$recipeId'
      fullPath: '/recipe/$recipeId'
      preLoaderRoute: typeof AppRecipeRecipeIdIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppRecipeIndexRoute: typeof AppRecipeIndexRoute
  AppUploadIndexRoute: typeof AppUploadIndexRoute
  AppRecipeRecipeIdIndexRoute: typeof AppRecipeRecipeIdIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppRecipeIndexRoute: AppRecipeIndexRoute,
  AppUploadIndexRoute: AppUploadIndexRoute,
  AppRecipeRecipeIdIndexRoute: AppRecipeRecipeIdIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/recipe': typeof AppRecipeIndexRoute
  '/upload': typeof AppUploadIndexRoute
  '/recipe/$recipeId': typeof AppRecipeRecipeIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/recipe': typeof AppRecipeIndexRoute
  '/upload': typeof AppUploadIndexRoute
  '/recipe/$recipeId': typeof AppRecipeRecipeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/recipe/': typeof AppRecipeIndexRoute
  '/_app/upload/': typeof AppUploadIndexRoute
  '/_app/recipe/$recipeId/': typeof AppRecipeRecipeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/recipe' | '/upload' | '/recipe/$recipeId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/recipe' | '/upload' | '/recipe/$recipeId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_app/recipe/'
    | '/_app/upload/'
    | '/_app/recipe/$recipeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/recipe/",
        "/_app/upload/",
        "/_app/recipe/$recipeId/"
      ]
    },
    "/_app/recipe/": {
      "filePath": "_app/recipe/index.tsx",
      "parent": "/_app"
    },
    "/_app/upload/": {
      "filePath": "_app/upload/index.tsx",
      "parent": "/_app"
    },
    "/_app/recipe/$recipeId/": {
      "filePath": "_app/recipe/$recipeId/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
